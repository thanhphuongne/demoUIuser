"use client";
import React, { useState, useEffect } from "react";
import {
  Calendar,
  Users,
  Star,
  MapPin,
  Clock,
  Trophy,
  Navigation,
  ChevronLeft,
  ChevronRight,
  Zap,
  Shield,
  Award,
  MessageCircle,
  Search,
  ArrowRight,
  Quote,
  BarChart,
  Target,
} from "lucide-react";
import { useAuthStore } from "../../stores/authStore";
import { useFieldStore } from "../../stores/fieldStore";
import { useRouter } from "next/navigation";

export const HomePage: React.FC = () => {
  const { isAuthenticated } = useAuthStore();
  const {
    popularFields,
    loading,
    fetchPopularFields,
    mainSports,
    fetchMainSports,
  } = useFieldStore();
  const router = useRouter();
  const [currentSlide, setCurrentSlide] = useState(0);
  const [currentTestimonialSlide, setCurrentTestimonialSlide] = useState(0);

  const sportsImages = [
    "https://images.pexels.com/photos/46798/the-ball-stadion-football-the-pitch-46798.jpeg?_gl=1*197jvac*_ga*MTM4MjA3NDU0OS4xNzUxMjg5Mzg3*_ga_8JE65Q40S6*czE3NTEyODkzODYkbzEkZzEkdDE3NTEyODkzOTkkajQ3JGwwJGgw",
    "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop&crop=center",
    "https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=800&h=600&fit=crop&crop=center",
    "https://images.pexels.com/photos/209977/pexels-photo-209977.jpeg?_gl=1*t142ag*_ga*MTM4MjA3NDU0OS4xNzUxMjg5Mzg3*_ga_8JE65Q40S6*czE3NTEyODkzODYkbzEkZzEkdDE3NTEyODk0OTMkajU1JGwwJGgw",
    "https://images.pexels.com/photos/262524/pexels-photo-262524.jpeg?_gl=1*ywlzwa*_ga*MTM4MjA3NDU0OS4xNzUxMjg5Mzg3*_ga_8JE65Q40S6*czE3NTEyODkzODYkbzEkZzEkdDE3NTEyODk1MjUkajIzJGwwJGgw",
  ];

  useEffect(() => {
    fetchPopularFields();
    fetchMainSports();
  }, [fetchPopularFields, fetchMainSports]);

  const testimonials = [
    {
      name: "Nguy·ªÖn VƒÉn A",
      role: "V·∫≠n ƒë·ªông vi√™n b√≥ng ƒë√°",
      content:
        "H·ªá th·ªëng ƒë·∫∑t s√¢n r·∫•t ti·ªán l·ª£i, s√¢n s·∫°ch ƒë·∫πp v√† gi√° c·∫£ h·ª£p l√Ω. T√¥i ƒë√£ ƒë·∫∑t s√¢n h∆°n 20 l·∫ßn r·ªìi!",
      rating: 5,
      avatar:
        "https://images.pexels.com/photos/1222271/pexels-photo-1222271.jpeg?auto=compress&cs=tinysrgb&w=100",
    },
    {
      name: "Tr·∫ßn Th·ªã B",
      role: "Ng∆∞·ªùi ch∆°i c·∫ßu l√¥ng",
      content:
        "·ª®ng d·ª•ng d·ªÖ s·ª≠ d·ª•ng, t√¨m ƒë·ªôi ch∆°i r·∫•t nhanh. C·ªông ƒë·ªìng th·ªÉ thao ·ªü ƒë√¢y r·∫•t th√¢n thi·ªán.",
      rating: 5,
      avatar:
        "https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?auto=compress&cs=tinysrgb&w=100",
    },
    {
      name: "L√™ Minh C",
      role: "Hu·∫•n luy·ªán vi√™n Pickle Ball",
      content:
        "Ch·∫•t l∆∞·ª£ng s√¢n t·ªët, h·ªá th·ªëng t√≠ch ƒëi·ªÉm h·∫•p d·∫´n. H·ªçc tr√≤ c·ªßa t√¥i ƒë·ªÅu th√≠ch ƒë·∫∑t s√¢n ·ªü ƒë√¢y.",
      rating: 5,
      avatar:
        "https://images.pexels.com/photos/1681010/pexels-photo-1681010.jpeg?auto=compress&cs=tinysrgb&w=100",
    },
  ];

  const getVisibleFields = () => {
    if (popularFields.length === 0) return [];
    const fields = [];
    for (let i = 0; i < 4; i++) {
      const index = (currentSlide + i) % popularFields.length;
      fields.push(popularFields[index]);
    }
    return fields;
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % popularFields.length);
  };

  const prevSlide = () => {
    setCurrentSlide(
      (prev) => (prev - 1 + popularFields.length) % popularFields.length
    );
  };

  const handleBookNow = () => {
    if (isAuthenticated) {
      router.push("/booking");
    } else {
      router.push("/login");
    }
  };

  const handleFindTeam = () => {
    router.push("/teams");
  };

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % sportsImages.length);
    }, 4000);
    return () => clearInterval(timer);
  }, [sportsImages.length]);

  const nextSlideSports = () => {
    setCurrentSlide((prev) => (prev + 1) % sportsImages.length);
  };

  const prevSlideSports = () => {
    setCurrentSlide(
      (prev) => (prev - 1 + sportsImages.length) % sportsImages.length
    );
  };
  const getVisibleTestimonials = () => {
    if (testimonials.length === 0) return [];
    const visibleTestimonials = [];
    for (let i = 0; i < 3; i++) {
      const index = (currentSlide + i) % testimonials.length;
      visibleTestimonials.push(testimonials[index]);
    }
    return visibleTestimonials;
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <section className="relative min-h-screen bg-gradient-to-br from-slate-900 via-green-900 to-emerald-900 text-white overflow-hidden">
        {/* Background Carousel */}
        <div className="absolute inset-0">
          {sportsImages.map((image, index) => (
            <div
              key={`hero-bg-${index}`}
              className={`absolute inset-0 transition-opacity duration-1000 ${
                index === currentSlide ? "opacity-30" : "opacity-0"
              }`}
            >
              <img
                src={image}
                alt={`Sports ${index + 1}`}
                className="w-full h-full object-cover"
              />
            </div>
          ))}

          {/* Overlay gradients */}
          <div className="absolute inset-0 bg-gradient-to-br from-green-900/80 via-emerald-900/70 to-slate-900/90"></div>
          <div className="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent"></div>
        </div>

        {/* Carousel Controls */}
        <button
          onClick={nextSlideSports}
          className="absolute left-6 top-1/2 -translate-y-1/2 z-10 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-full p-3 transition-all duration-300 group"
        >
          <ChevronLeft className="w-6 h-6 group-hover:scale-110 transition-transform" />
        </button>

        <button
          onClick={prevSlideSports}
          className="absolute right-6 top-1/2 -translate-y-1/2 z-10 bg-white/10 backdrop-blur-sm hover:bg-white/20 rounded-full p-3 transition-all duration-300 group"
        >
          <ChevronRight className="w-6 h-6 group-hover:scale-110 transition-transform" />
        </button>

        {/* Carousel Indicators */}
        <div className="absolute bottom-8 left-1/2 -translate-x-1/2 z-10 flex gap-3">
          {sportsImages.map((_, index) => (
            <button
              key={`hero-indicator-${index}`}
              onClick={() => setCurrentSlide(index)}
              className={`w-3 h-3 rounded-full transition-all duration-300 ${
                index === currentSlide
                  ? "bg-white scale-125"
                  : "bg-white/40 hover:bg-white/60"
              }`}
            />
          ))}
        </div>

        {/* Animated background elements */}
        <div className="absolute top-20 left-10 w-40 h-40 bg-green-400/10 rounded-full animate-pulse"></div>
        <div className="absolute bottom-32 right-16 w-32 h-32 bg-emerald-400/10 rounded-full animate-pulse delay-1000"></div>
        <div className="absolute top-1/3 right-1/4 w-24 h-24 bg-white/5 rounded-full animate-pulse delay-500"></div>
        <div className="absolute bottom-1/4 left-1/4 w-20 h-20 bg-green-300/10 rounded-full animate-pulse delay-700"></div>

        {/* Content */}
        <div className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 flex items-center min-h-screen">
          <div className="text-center w-full">
            {/* Badge */}
            <div className="flex justify-center mb-8 animate-fade-in">
              <div className="bg-gradient-to-r from-green-500/20 to-emerald-500/20 backdrop-blur-lg rounded-full px-8 py-3 border border-green-400/30 shadow-lg">
                <span className="text-green-200 font-semibold text-lg tracking-wide">
                  üèÜ H·ªá th·ªëng ƒë·∫∑t s√¢n t·∫°i Quy Nh∆°n
                </span>
              </div>
            </div>

            {/* Main Heading */}
            <h1 className="text-6xl md:text-8xl lg:text-9xl font-black mb-8 leading-none tracking-tight">
              <span className="block bg-gradient-to-r from-white via-green-100 to-emerald-200 bg-clip-text text-transparent animate-gradient">
                ƒê·∫∑t s√¢n
              </span>
              <span className="block bg-gradient-to-r from-green-300 via-emerald-300 to-green-200 bg-clip-text text-transparent animate-gradient delay-300">
                th·ªÉ thao
              </span>
              <span className="block text-4xl md:text-5xl lg:text-6xl mt-4 bg-gradient-to-r from-emerald-200 to-green-300 bg-clip-text text-transparent animate-gradient delay-500">
                d·ªÖ d√†ng & nhanh ch√≥ng
              </span>
            </h1>

            {/* Subtitle */}
            <div className="max-w-6xl mx-auto mb-12">
              <p className="text-lg md:text-xl lg:text-2xl font-light text-green-100/90 leading-relaxed tracking-wide whitespace-nowrap overflow-hidden">
                <span className="animate-fade-in-up delay-700">
                  K·∫øt n·ªëi c·ªông ƒë·ªìng th·ªÉ thao
                </span>
                <span className="mx-3 text-green-400">‚Ä¢</span>
                <span className="animate-fade-in-up delay-1000">
                  ƒê·∫∑t s√¢n trong 30 gi√¢y
                </span>
                <span className="mx-3 text-green-400">‚Ä¢</span>
                <span className="animate-fade-in-up delay-1300">
                  T√¨m ƒë·ªôi ch∆°i d·ªÖ d√†ng
                </span>
              </p>
            </div>

            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-6 justify-center animate-fade-in-up delay-1500">
              <button
                onClick={handleBookNow}
                className="group relative bg-gradient-to-r from-white to-green-50 text-green-800 px-12 py-5 rounded-2xl font-bold text-xl hover:from-green-50 hover:to-white transition-all duration-500 shadow-2xl hover:shadow-green-500/25 transform hover:-translate-y-2 hover:scale-105"
              >
                <span className="flex items-center justify-center gap-3">
                  <span className="relative z-10">ƒê·∫∑t s√¢n ngay</span>
                  <Navigation className="w-6 h-6 group-hover:translate-x-2 transition-transform duration-300 relative z-10" />
                </span>
                <div className="absolute inset-0 bg-gradient-to-r from-green-400 to-emerald-400 rounded-2xl opacity-0 group-hover:opacity-20 transition-opacity duration-500"></div>
              </button>

              <button
                onClick={handleFindTeam}
                className="group relative border-3 border-white/80 bg-white/5 backdrop-blur-sm text-white px-12 py-5 rounded-2xl font-bold text-xl hover:bg-white hover:text-green-800 transition-all duration-500 shadow-2xl hover:shadow-white/25 transform hover:-translate-y-2 hover:scale-105"
              >
                <span className="relative z-10 flex items-center justify-center gap-3">
                  <span className="relative z-10">T√¨m ƒë·ªôi ch∆°i</span>
                  <Search className="w-6 h-6 group-hover:translate-x-2 transition-transform duration-300 relative z-10" />
                </span>
                <div className="absolute inset-0 bg-gradient-to-r from-green-400 to-emerald-400 rounded-2xl opacity-0 group-hover:opacity-20 transition-opacity duration-500"></div>
              </button>
            </div>
          </div>
        </div>
      </section>

      <section className="py-24 bg-gradient-to-br from-gray-50 via-white to-emerald-50 relative overflow-hidden">
        {/* Decorative Background Elements - Enhanced */}
        <div className="absolute inset-0 pointer-events-none">
          <div className="absolute -top-20 -left-20 w-80 h-80 bg-gradient-to-br from-green-200/30 to-emerald-300/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute -bottom-20 -right-20 w-96 h-96 bg-gradient-to-bl from-emerald-300/20 to-green-400/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-gradient-to-r from-green-100/10 to-emerald-100/10 rounded-full blur-2xl"></div>
        </div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          {/* Enhanced Header */}
          <div className="text-center mb-20">
            <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl mb-8 shadow-lg">
              <Zap className="w-10 h-10 text-white" />
            </div>
            <h2 className="text-4xl md:text-6xl font-extrabold bg-gradient-to-r from-gray-900 via-green-800 to-emerald-800 bg-clip-text text-transparent mb-6 tracking-tight leading-tight">
              T·∫°i sao ch·ªçn ch√∫ng t√¥i?
            </h2>
            <p className="text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
              Kh√°m ph√° nh·ªØng t√≠nh nƒÉng n·ªïi b·∫≠t mang ƒë·∫øn tr·∫£i nghi·ªám th·ªÉ thao
              ƒë·ªânh cao t·∫°i Quy Nh∆°n
            </p>
            <div className="mt-8 w-32 h-1 bg-gradient-to-r from-green-500 to-emerald-500 mx-auto rounded-full"></div>
          </div>

          {/* Enhanced Features Grid - 2x2 Layout */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
            {[
              {
                icon: <Calendar className="w-8 h-8 text-white" />,
                title: "ƒê·∫∑t s√¢n si√™u t·ªëc",
                description:
                  "ƒê·∫∑t s√¢n y√™u th√≠ch ch·ªâ trong 30 gi√¢y. Xem l·ªãch tr·ªëng theo th·ªùi gian th·ª±c, thanh to√°n an to√†n, nhanh ch√≥ng.",
                color: "from-green-500 to-emerald-600",
                bgColor: "from-green-50 to-green-100/50",
                stats: "< 30 gi√¢y",
              },
              {
                icon: <Users className="w-8 h-8 text-white" />,
                title: "K·∫øt n·ªëi ƒë·ªôi nh√≥m",
                description:
                  "T√¨m ki·∫øm ƒë·ªìng ƒë·ªôi, t·ªï ch·ª©c tr·∫≠n ƒë·∫•u v√† x√¢y d·ª±ng c·ªông ƒë·ªìng th·ªÉ thao s√¥i ƒë·ªông t·∫°i Quy Nh∆°n.",
                color: "from-green-500 to-emerald-600",
                bgColor: "from-green-50 to-green-100/50",
                stats: "10K+ th√†nh vi√™n",
              },
              {
                icon: <Shield className="w-8 h-8 text-white" />,
                title: "B·∫£o m·∫≠t tuy·ªát ƒë·ªëi",
                description:
                  "D·ªØ li·ªáu c√° nh√¢n v√† giao d·ªãch ƒë∆∞·ª£c b·∫£o v·ªá t·ªëi ƒëa v·ªõi c√¥ng ngh·ªá m√£ h√≥a ti√™n ti·∫øn.",
                color: "from-green-500 to-emerald-600",
                bgColor: "from-green-50 to-emerald-100/50",
                stats: "99.9% an to√†n",
              },
              {
                icon: <Trophy className="w-8 h-8 text-white" />,
                title: "T√≠ch ƒëi·ªÉm th∆∞·ªüng",
                description:
                  "T√≠ch l≈©y ƒëi·ªÉm m·ªói khi ƒë·∫∑t s√¢n, ƒë·ªïi l·∫•y ∆∞u ƒë√£i ƒë·ªôc quy·ªÅn v√† ph·∫ßn qu√† gi√° tr·ªã.",
                color: "from-green-500 to-emerald-600",
                bgColor: "from-green-50 to-green-100/50",
                stats: "∆Øu ƒë√£i 20%",
              },
            ].map((feature, index) => (
              <div
                key={`feature-${index}`}
                className={`group relative p-10 rounded-3xl bg-gradient-to-br ${feature.bgColor} backdrop-blur-sm shadow-xl hover:shadow-2xl transition-all duration-500 border border-white/50 hover:-translate-y-3 overflow-hidden`}
              >
                {/* Background Decoration */}
                <div className="absolute top-0 right-0 w-32 h-32 bg-gradient-to-bl from-white/20 to-transparent rounded-bl-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                {/* Content */}
                <div className="relative z-10">
                  {/* Icon and Stats Row */}
                  <div className="flex items-center justify-between mb-6">
                    <div
                      className={`w-16 h-16 bg-gradient-to-br ${feature.color} rounded-2xl flex items-center justify-center shadow-lg group-hover:scale-110 group-hover:rotate-3 transition-all duration-300`}
                    >
                      {feature.icon}
                    </div>
                    <div className="text-right">
                      <div
                        className={`text-sm font-bold bg-gradient-to-r ${feature.color} bg-clip-text text-transparent`}
                      >
                        {feature.stats}
                      </div>
                    </div>
                  </div>

                  {/* Title */}
                  <h3 className="text-2xl font-bold text-gray-900 mb-4 group-hover:text-green-700 transition-colors duration-300">
                    {feature.title}
                  </h3>

                  {/* Description */}
                  <p className="text-gray-700 leading-relaxed text-lg group-hover:text-gray-800 transition-colors duration-300">
                    {feature.description}
                  </p>

                  {/* Hover indicator */}
                  <div className="mt-6 flex items-center text-green-600 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                    <span className="text-sm font-semibold mr-2">
                      T√¨m hi·ªÉu th√™m
                    </span>
                    <ArrowRight className="w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" />
                  </div>
                </div>

                {/* Animated border */}
                <div className="absolute inset-0 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                  <div
                    className={`absolute inset-0 rounded-3xl bg-gradient-to-r ${feature.color} opacity-10`}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section className="py-24 bg-gradient-to-br from-green-50 via-white to-emerald-50 relative overflow-hidden">
        {/* Background decorations */}
        <div className="absolute inset-0 pointer-events-none">
          <div className="absolute top-20 left-10 w-32 h-32 bg-green-200/20 rounded-full blur-2xl animate-pulse"></div>
          <div className="absolute bottom-20 right-10 w-40 h-40 bg-emerald-200/15 rounded-full blur-3xl animate-pulse delay-700"></div>
          <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-green-100/10 rounded-full blur-3xl"></div>
        </div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
          {/* Header */}
          <div className="text-center mb-20">
            <h2 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6 leading-tight">
              M√¥n th·ªÉ thao{" "}
              <span className="bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                ch·ªß l·ª±c
              </span>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              Ba m√¥n th·ªÉ thao ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t t·∫°i Quy Nh∆°n v·ªõi h·ªá th·ªëng s√¢n
              ch·∫•t l∆∞·ª£ng cao v√† d·ªãch v·ª• chuy√™n nghi·ªáp
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 lg:gap-10">
            {loading ? (
              // Loading skeleton cho main sports
              Array(3)
                .fill(0)
                .map((_, index) => (
                  <div
                    key={`sports-skeleton-${index}`}
                    className="bg-white/80 backdrop-blur-sm rounded-3xl p-8 shadow-lg min-h-[500px] animate-pulse"
                  >
                    <div className="w-28 h-28 bg-gray-200 rounded-3xl mx-auto mb-8"></div>
                    <div className="h-6 bg-gray-200 rounded mb-4"></div>
                    <div className="h-4 bg-gray-200 rounded mb-2"></div>
                    <div className="h-4 bg-gray-200 rounded mb-2"></div>
                    <div className="h-4 bg-gray-200 rounded mb-8"></div>
                    <div className="h-10 bg-gray-200 rounded-full"></div>
                  </div>
                ))
            ) : mainSports.length > 0 ? (
              mainSports.map((sport) => (
                <div
                  key={sport.id}
                  className="group relative bg-white/80 backdrop-blur-sm rounded-3xl p-8 shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 border border-white/20 overflow-hidden min-h-[500px]"
                  onClick={() => router.push(`/fields?sport=${sport.name}`)}
                  style={{ cursor: 'pointer' }}
                >
                  <div className="absolute inset-0 bg-gradient-to-br from-white/90 to-gray-50/50 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>

                  {/* Card Content */}
                  <div className="relative z-10 flex flex-col h-full">
                    <div className="flex items-center justify-center mb-8">
                      <div
                        className={`w-28 h-28 bg-gradient-to-br from-green-500 to-emerald-600 rounded-3xl flex items-center justify-center mx-auto shadow-lg group-hover:shadow-xl group-hover:scale-110 transition-all duration-500 relative overflow-hidden`}
                      >
                        <div className="absolute inset-0 bg-white/20 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        <span className="text-5xl relative z-10 group-hover:scale-110 transition-transform duration-300">
                          {sport.icon}
                        </span>
                      </div>
                    </div>

                    <h3 className="text-2xl font-bold text-gray-900 mb-4 text-center group-hover:text-green-700 transition-colors duration-300">
                      {sport.name}
                    </h3>
                    <p className="text-gray-600 text-center mb-8 leading-relaxed group-hover:text-gray-700 transition-colors duration-300 text-base">
                      {sport.description}
                    </p>

                    {/* CTA Button */}
                    <div className="text-center mt-auto">
                      <div className="inline-flex items-center gap-2 bg-black-50 hover:bg-black-100 text-black-700 px-6 py-3 rounded-full text-sm font-semibold transition-all duration-300 group-hover:shadow-md cursor-pointer border border-black-100">
                        <span>{sport.courts} s√¢n kh·∫£ d·ª•ng</span>
                        <ArrowRight className="w-4 h-4 group-hover:translate-x-1 transition-transform duration-300" />
                      </div>
                    </div>
                  </div>

                  {/* Decorative corner */}
                  <div className="absolute top-0 right-0 w-20 h-20 bg-gradient-to-bl from-green-100/30 to-transparent rounded-bl-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                </div>
              ))
            ) : (
              <div className="col-span-3 text-center py-12">
                <p className="text-gray-500">Kh√¥ng t√¨m th·∫•y m√¥n th·ªÉ thao n√†o</p>
              </div>
            )}
          </div>

          {/* Bottom CTA */}
          <div className="text-center mt-16">
            <button className="group inline-flex items-center gap-3 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white px-8 py-4 rounded-2xl font-semibold text-lg shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1"
              onClick={() => router.push('/fields')}
            >
              <span>Kh√°m ph√° t·∫•t c·∫£ s√¢n th·ªÉ thao</span>
              <ArrowRight className="w-5 h-5 group-hover:translate-x-1 transition-transform duration-300" />
            </button>
          </div>
        </div>
      </section>

      {/* About System Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div>
              <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
                V·ªÅ h·ªá th·ªëng c·ªßa ch√∫ng t√¥i
              </h2>
              <p className="text-xl text-gray-600 mb-8">
                Ch√∫ng t√¥i l√† h·ªá th·ªëng ƒë·∫∑t s√¢n th·ªÉ thao h√†ng ƒë·∫ßu t·∫°i Quy Nhon,
                k·∫øt n·ªëi h∆°n 50+ s√¢n th·ªÉ thao ch·∫•t l∆∞·ª£ng cao v·ªõi c·ªông ƒë·ªìng ng∆∞·ªùi
                ch∆°i ƒëam m√™ th·ªÉ thao.
              </p>
              <div className="space-y-4">
                <div className="flex items-center gap-4">
                  <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                    <Zap className="w-6 h-6 text-green-600" />
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900">
                      ƒê·∫∑t s√¢n nhanh ch√≥ng
                    </h4>
                    <p className="text-gray-600">
                      Giao di·ªán th√¢n thi·ªán, ƒë·∫∑t s√¢n ch·ªâ trong v√†i click
                    </p>
                  </div>
                </div>
                <div className="flex items-center gap-4">
                  <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                    <Award className="w-6 h-6 text-green-600" />
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900">
                      Ch·∫•t l∆∞·ª£ng ƒë·∫£m b·∫£o
                    </h4>
                    <p className="text-gray-600">
                      T·∫•t c·∫£ s√¢n ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm ƒë·ªãnh ch·∫•t l∆∞·ª£ng nghi√™m ng·∫∑t
                    </p>
                  </div>
                </div>
                <div className="flex items-center gap-4">
                  <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                    <Users className="w-6 h-6 text-green-600" />
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900">
                      C·ªông ƒë·ªìng l·ªõn m·∫°nh
                    </h4>
                    <p className="text-gray-600">
                      H∆°n 10,000+ th√†nh vi√™n t√≠ch c·ª±c tham gia
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <div className="relative">
              <div className="absolute inset-0 bg-gradient-to-br from-green-400 to-emerald-600 rounded-3xl transform rotate-3"></div>
              <img
                src="https://images.pexels.com/photos/163452/basketball-dunk-blue-game-163452.jpeg?auto=compress&cs=tinysrgb&w=600"
                alt="H·ªá th·ªëng th·ªÉ thao"
                className="relative w-full h-96 object-cover rounded-3xl shadow-2xl"
              />
            </div>
          </div>
        </div>
      </section>
      {/* Owner Features Section - Ch√®n sau About System Section */}
      <section className="py-24 bg-gradient-to-br from-emerald-900 via-green-800 to-slate-900 text-white relative overflow-hidden">
        {/* Animated Background Elements */}
        <div className="absolute inset-0 pointer-events-none">
          <div className="absolute top-20 left-20 w-40 h-40 bg-green-400/10 rounded-full animate-pulse"></div>
          <div className="absolute bottom-32 right-16 w-56 h-56 bg-emerald-400/10 rounded-full animate-pulse delay-1000"></div>
          <div className="absolute top-1/2 left-1/4 w-32 h-32 bg-white/5 rounded-full animate-pulse delay-500"></div>
          <div className="absolute bottom-1/4 right-1/3 w-24 h-24 bg-green-300/10 rounded-full animate-pulse delay-700"></div>
        </div>

        {/* Background Gradient Overlay */}
        <div className="absolute inset-0 bg-gradient-to-r from-emerald-900/90 via-green-800/80 to-slate-900/90"></div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          {/* Header */}
          <div className="text-center mb-20">
            <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-white/20 to-green-200/20 backdrop-blur-sm rounded-2xl mb-8 border border-white/10">
              <Shield className="w-10 h-10 text-green-200" />
            </div>
            <h2 className="text-4xl md:text-6xl font-bold mb-6 leading-tight">
              D√†nh cho{" "}
              <span className="bg-gradient-to-r from-green-300 via-emerald-200 to-green-100 bg-clip-text text-transparent">
                ch·ªß s√¢n
              </span>
            </h2>
            <p className="text-xl text-green-100/90 max-w-3xl mx-auto leading-relaxed">
              Qu·∫£n l√Ω s√¢n th·ªÉ thao hi·ªáu qu·∫£ v·ªõi h·ªá th·ªëng c√¥ng ngh·ªá ti√™n ti·∫øn,
              tƒÉng doanh thu v√† t·ªëi ∆∞u h√≥a v·∫≠n h√†nh
            </p>
            <div className="mt-8 w-32 h-1 bg-gradient-to-r from-green-400 to-emerald-400 mx-auto rounded-full"></div>
          </div>

          {/* Two Column Layout */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-16 items-center">
            {/* Left Column - Features */}
            <div className="space-y-8">
              <div className="grid grid-cols-1 gap-8">
                {[
                  {
                    icon: <Calendar className="w-7 h-7 text-white" />,
                    title: "Qu·∫£n l√Ω l·ªãch ƒë·∫∑t s√¢n",
                    description:
                      "Theo d√µi l·ªãch ƒë·∫∑t s√¢n theo th·ªùi gian th·ª±c, qu·∫£n l√Ω slot tr·ªëng v√† t·ªëi ∆∞u h√≥a t·ª∑ l·ªá l·∫•p ƒë·∫ßy s√¢n.",
                    color: "from-green-500 to-green-600",
                  },
                  {
                    icon: <Users className="w-7 h-7 text-white" />,
                    title: "Qu·∫£n l√Ω kh√°ch h√†ng",
                    description:
                      "X√¢y d·ª±ng c∆° s·ªü d·ªØ li·ªáu kh√°ch h√†ng, theo d√µi l·ªãch s·ª≠ ƒë·∫∑t s√¢n v√† chƒÉm s√≥c kh√°ch h√†ng VIP.",
                    color: "from-green-500 to-green-600",
                  },
                  {
                    icon: <Trophy className="w-7 h-7 text-white" />,
                    title: "B√°o c√°o doanh thu",
                    description:
                      "Th·ªëng k√™ chi ti·∫øt doanh thu theo ng√†y/th√°ng/nƒÉm v·ªõi bi·ªÉu ƒë·ªì tr·ª±c quan v√† ph√¢n t√≠ch xu h∆∞·ªõng.",
                    color: "from-green-500 to-green-600",
                  },
                  {
                    icon: <MessageCircle className="w-7 h-7 text-white" />,
                    title: "H·ªó tr·ª£ 24/7",
                    description:
                      "ƒê·ªôi ng≈© h·ªó tr·ª£ k·ªπ thu·∫≠t chuy√™n nghi·ªáp, s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc v√† h·ªó tr·ª£ v·∫≠n h√†nh.",
                    color: "from-green-500 to-green-600",
                  },
                ].map((feature, index) => (
                  <div
                    key={`platform-feature-${index}`}
                    className="group flex items-start space-x-6 p-6 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:bg-white/10 transition-all duration-300 hover:-translate-y-1"
                  >
                    <div
                      className={`w-16 h-16 bg-gradient-to-br ${feature.color} rounded-xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}
                    >
                      {feature.icon}
                    </div>
                    <div className="flex-1">
                      <h3 className="text-xl font-bold text-white mb-3 group-hover:text-green-200 transition-colors duration-300">
                        {feature.title}
                      </h3>
                      <p className="text-green-100/80 leading-relaxed group-hover:text-white transition-colors duration-300">
                        {feature.description}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Right Column - Image & CTA */}
            <div className="relative">
              {/* Background decorative elements */}
              <div className="absolute -top-10 -right-10 w-40 h-40 bg-green-400/20 rounded-full blur-2xl"></div>
              <div className="absolute -bottom-10 -left-10 w-32 h-32 bg-emerald-400/20 rounded-full blur-2xl"></div>

              {/* Main Image */}
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-br from-green-400/20 to-emerald-600/20 rounded-3xl transform rotate-3"></div>
                <img
                  src="https://images.pexels.com/photos/7688336/pexels-photo-7688336.jpeg?auto=compress&cs=tinysrgb&w=600"
                  alt="Qu·∫£n l√Ω s√¢n th·ªÉ thao"
                  className="relative w-full h-96 object-cover rounded-3xl shadow-2xl"
                />
              </div>

              {/* Stats Cards */}
              <div className="absolute -bottom-8 -left-8 bg-white/95 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
                <div className="flex items-center space-x-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center">
                    <Trophy className="w-6 h-6 text-white" />
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-gray-900">50+</div>
                    <div className="text-sm text-gray-600">
                      Ch·ªß s√¢n ƒëang s·ª≠ d·ª•ng
                    </div>
                  </div>
                </div>
              </div>

              <div className="absolute -top-8 -right-8 bg-white/95 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
                <div className="flex items-center space-x-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center">
                    <Award className="w-6 h-6 text-white" />
                  </div>
                  <div>
                    <div className="text-2xl font-bold text-gray-900">99%</div>
                    <div className="text-sm text-gray-600">ƒê·ªô h√†i l√≤ng</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Benefits Section */}
          <div className="mt-20 pt-16 border-t border-white/10">
            <div className="text-center mb-12">
              <h3 className="text-3xl font-bold text-white mb-4">
                T·∫°i sao ch·ªß s√¢n ch·ªçn ch√∫ng t√¥i?
              </h3>
              <p className="text-green-100/80 text-lg max-w-2xl mx-auto">
                Nh·ªØng l·ª£i √≠ch v∆∞·ª£t tr·ªôi khi tham gia h·ªá th·ªëng qu·∫£n l√Ω s√¢n th·ªÉ
                thao c·ªßa ch√∫ng t√¥i
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {[
                {
                  icon: <BarChart className="w-8 h-8 text-white" />, // Thay th·∫ø üìà
                  title: "TƒÉng doanh thu 40%",
                  description:
                    "T·ªëi ∆∞u h√≥a l·ªãch ƒë·∫∑t s√¢n v√† thu h√∫t th√™m kh√°ch h√†ng m·ªõi",
                },
                {
                  icon: <Zap className="w-8 h-8 text-white" />, // Thay th·∫ø ‚ö°
                  title: "Ti·∫øt ki·ªám th·ªùi gian",
                  description:
                    "T·ª± ƒë·ªông h√≥a quy tr√¨nh ƒë·∫∑t s√¢n v√† qu·∫£n l√Ω thanh to√°n",
                },
                {
                  icon: <Target className="w-8 h-8 text-white" />, // Thay th·∫ø üéØ
                  title: "Marketing hi·ªáu qu·∫£",
                  description:
                    "Ti·∫øp c·∫≠n h√†ng ng√†n ng∆∞·ªùi ch∆°i th·ªÉ thao t·∫°i Quy Nh∆°n",
                },
              ].map((benefit, index) => (
                <div key={`benefit-${index}`} className="text-center group">
                  <div className="w-16 h-16 bg-white/10 backdrop-blur-sm rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:bg-white/20 transition-all duration-300 group-hover:scale-110">
                    {benefit.icon}
                  </div>
                  <h4 className="text-xl font-bold text-white mb-3 group-hover:text-green-200 transition-colors duration-300">
                    {benefit.title}
                  </h4>
                  <p className="text-green-100/80 group-hover:text-white transition-colors duration-300">
                    {benefit.description}
                  </p>
                </div>
              ))}
            </div>
          </div>

          {/* CTA Section */}
          <div className="text-center mt-20">
            <div className="bg-white/5 backdrop-blur-sm rounded-3xl p-12 border border-white/10">
              <h3 className="text-3xl font-bold text-white mb-4">
                S·∫µn s√†ng tham gia c√πng ch√∫ng t√¥i?
              </h3>
              <p className="text-green-100/80 text-lg mb-8 max-w-2xl mx-auto">
                ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát cho 3 th√°ng ƒë·∫ßu
                ti√™n
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button className="group bg-gradient-to-r from-white to-green-50 text-green-800 px-8 py-4 rounded-2xl font-bold text-lg hover:from-green-50 hover:to-white transition-all duration-300 shadow-xl hover:shadow-white/25 transform hover:-translate-y-1">
                  <span className="flex items-center justify-center gap-3">
                    <span>ƒêƒÉng k√Ω l√†m ƒë·ªëi t√°c</span>
                    <ArrowRight className="w-5 h-5 group-hover:translate-x-1 transition-transform duration-300" />
                  </span>
                </button>
                <button className="group border-2 border-white/80 bg-white/5 backdrop-blur-sm text-white px-8 py-4 rounded-2xl font-bold text-lg hover:bg-white hover:text-green-800 transition-all duration-300 shadow-xl hover:shadow-white/25 transform hover:-translate-y-1">
                  <span className="flex items-center justify-center gap-3">
                    <MessageCircle className="w-5 h-5" />
                    <span>T∆∞ v·∫•n mi·ªÖn ph√≠</span>
                  </span>
                </button>
              </div>

              {/* Trust indicators */}
              <div className="flex items-center justify-center space-x-8 mt-8 pt-8 border-t border-white/10">
                <div className="flex items-center space-x-2 text-green-200">
                  <Shield className="w-5 h-5" />
                  <span className="text-sm">B·∫£o m·∫≠t tuy·ªát ƒë·ªëi</span>
                </div>
                <div className="flex items-center space-x-2 text-green-200">
                  <Award className="w-5 h-5" />
                  <span className="text-sm">H·ªó tr·ª£ 24/7</span>
                </div>
                <div className="flex items-center space-x-2 text-green-200">
                  <Zap className="w-5 h-5" />
                  <span className="text-sm">Tri·ªÉn khai nhanh</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      {/* Popular Fields Slider */}
      <section className="py-24 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-20">
            <h2 className="text-4xl md:text-6xl font-bold text-gray-900 mb-6 leading-tight">
              S√¢n th·ªÉ thao{" "}
              <span className="bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                ph·ªï bi·∫øn
              </span>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              Nh·ªØng s√¢n th·ªÉ thao ƒë∆∞·ª£c ƒë√°nh gi√° cao nh·∫•t v√† ƒë∆∞·ª£c ƒë·∫∑t nhi·ªÅu nh·∫•t t·∫°i Quy Nh∆°n
            </p>
          </div>

          {loading ? (
            <div className="text-center py-12">
              <p>ƒêang t·∫£i s√¢n th·ªÉ thao...</p>
            </div>
          ) : popularFields.length > 0 ? (
            <div className="relative flex items-center justify-center">
              <button
                onClick={prevSlide}
                className="absolute -left-10 top-1/2 -translate-y-1/2 bg-white w-12 h-12 p-0 rounded-full shadow-2xl hover:shadow-green-200 hover:bg-green-50 transition-all duration-300 group border-2 border-green-100 z-20 flex items-center justify-center"
              >
                <ChevronLeft className="w-7 h-7 text-green-600 group-hover:text-green-700" />
              </button>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mx-auto max-w-6xl">
                {getVisibleFields().map((field) => {
                  return (
                    <div
                      key={field.id}
                      className="bg-white rounded-3xl shadow-xl overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 border border-gray-100"
                    >
                      <div className="relative h-56">
                        <img
                          src={field.image}
                          alt={field.name}
                          className="w-full h-full object-cover"
                        />
                        <div className="absolute top-3 right-3 bg-black/70 backdrop-blur-sm rounded-full px-3 py-1 flex items-center space-x-1">
                          <Star className="w-4 h-4 text-yellow-400 fill-current" />
                          <span className="text-xs font-bold text-white">
                            {field.rating}
                          </span>
                        </div>
                        <div className="absolute top-3 left-3 bg-white text-green-700 w-9 h-9 flex items-center justify-center rounded-full text-xl shadow">
                          {field.sport === "football"
                            ? "‚öΩ"
                            : field.sport === "badminton"
                            ? "üè∏"
                            : field.sport === "pickle"
                            ? "üéæ"
                            : ""}
                        </div>
                      </div>
                      <div className="p-5">
                        <h3 className="text-base font-bold text-gray-900 mb-2 line-clamp-1">
                          {field.name}
                        </h3>
                        <div className="space-y-2 mb-3">
                          <div className="flex items-center space-x-2 text-gray-600">
                            <MapPin className="w-3 h-3 text-green-600" />
                            <span className="text-xs">{field.location}</span>
                          </div>
                          <div className="flex items-center space-x-2 text-gray-600">
                            <Clock className="w-3 h-3 text-green-600" />
                            <span className="text-xs">
                              {field.openingHours}
                            </span>
                          </div>
                        </div>
                        <div className="flex items-center justify-between mb-3 p-2 rounded-xl">
                          <div className="text-base font-bold text-green-700">
                            {field.price}
                          </div>
                          <div className="text-right">
                            <div className="text-xs text-green-700">
                              {field.reviews} ƒë√°nh gi√°
                            </div>
                          </div>
                        </div>
                        <div className="flex gap-2">
                          <button
                            onClick={handleBookNow}
                            className="flex-1 bg-green-600 text-white py-2 px-3 rounded-xl hover:bg-green-700 transition-colors font-semibold text-xs"
                          >
                            ƒê·∫∑t ngay
                          </button>
                          <button className="px-3 py-2 border-2 border-green-600 text-green-600 rounded-xl hover:bg-green-50 transition-colors text-xs font-semibold">
                            Chi ti·∫øt
                          </button>
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
              <button
                onClick={nextSlide}
                className="absolute -right-10 top-1/2 -translate-y-1/2 bg-white w-12 h-12 p-0 rounded-full shadow-2xl hover:shadow-green-200 hover:bg-green-50 transition-all duration-300 group border-2 border-green-100 z-20 flex items-center justify-center"
              >
                <ChevronRight className="w-7 h-7 text-green-600 group-hover:text-green-700" />
              </button>
            </div>
          ) : (
            <div className="text-center py-12">
              <p className="text-gray-500">Kh√¥ng t√¨m th·∫•y s√¢n th·ªÉ thao n√†o</p>
            </div>
          )}

          {/* Enhanced Slide Indicators */}
          <div className="flex justify-center items-center mt-16 space-x-4">
            <div className="flex space-x-3 bg-white/80 backdrop-blur-sm rounded-full px-6 py-3 shadow-lg">
              {popularFields.map((_, index) => (
                <button
                  key={`popular-field-indicator-${index}`}
                  onClick={() => setCurrentSlide(index)}
                  className={`relative overflow-hidden rounded-full transition-all duration-500 ${
                    currentSlide === index
                      ? "w-12 h-4 bg-gradient-to-r from-green-500 to-green-500"
                      : "w-4 h-4 bg-gray-300 hover:bg-gray-400 hover:scale-125"
                  }`}
                >
                  {currentSlide === index && (
                    <div className="absolute inset-0 bg-white/30 rounded-full animate-pulse"></div>
                  )}
                </button>
              ))}
            </div>
          </div>
        </div>
      </section>

      <section className="py-24 bg-gradient-to-br from-gray-50 via-white to-gray-100 relative overflow-hidden">
        {/* Background Decorations */}
        <div className="absolute inset-0">
          <div className="absolute top-20 left-10 w-72 h-72 bg-green-100 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-pulse"></div>
          <div className="absolute bottom-20 right-10 w-96 h-96 bg-blue-100 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-pulse animation-delay-2000"></div>
        </div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="text-center mb-20">
            <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-green-500 to-green-500 rounded-full mb-6">
              <Quote className="w-8 h-8 text-white" />
            </div>
            <h2 className="text-4xl md:text-6xl font-bold bg-gradient-to-r from-gray-900 via-gray-800 to-gray-700 bg-clip-text text-transparent mb-6 leading-tight">
              M·ªçi ng∆∞·ªùi n√≥i g√¨ v·ªÅ ch√∫ng t√¥i
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              H√†ng ng√†n kh√°ch h√†ng h√†i l√≤ng ƒë√£ tin t∆∞·ªüng s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa
              ch√∫ng t√¥i
            </p>
            <div className="mt-8 w-24 h-1 bg-gradient-to-r from-green-500 to-green-500 mx-auto rounded-full"></div>
          </div>

          {/* Testimonials Grid */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mx-auto max-w-6xl">
            {getVisibleTestimonials().map((testimonial, index) => (
              <div
                key={`${testimonial.name}-${currentTestimonialSlide}-${index}`}
                className="bg-white rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 border border-gray-100 min-h-[320px] flex flex-col"
              >
                {/* Author Info - Moved to top */}
                <div className="flex items-center space-x-4 mb-6">
                  <img
                    src={testimonial.avatar}
                    alt={testimonial.name}
                    className="w-16 h-16 rounded-full object-cover shadow-lg"
                  />
                  <div className="text-left">
                    <h4 className="font-bold text-gray-900 text-lg mb-1">
                      {testimonial.name}
                    </h4>
                    <p className="text-green-600 text-sm font-medium">
                      {testimonial.role}
                    </p>
                  </div>
                </div>

                {/* Rating Stars */}
                <div className="flex mb-6">
                  {[...Array(testimonial.rating)].map((_, i) => (
                    <Star
                      key={i}
                      className="w-5 h-5 text-yellow-400 fill-current"
                    />
                  ))}
                </div>

                {/* Content */}
                <div className="flex-grow">
                  <p className="text-gray-700 text-base leading-relaxed italic">
                    "{testimonial.content}"
                  </p>
                </div>
              </div>
            ))}
          </div>

          {/* Enhanced Slide Indicators */}
          <div className="flex justify-center items-center mt-16 space-x-4">
            <div className="flex space-x-3 bg-white/80 backdrop-blur-sm rounded-full px-6 py-3 shadow-lg">
              {testimonials.map((_, index) => (
                <button
                  key={`testimonial-indicator-${index}`}
                  onClick={() => setCurrentTestimonialSlide(index)}
                  className={`relative overflow-hidden rounded-full transition-all duration-500 ${
                    currentTestimonialSlide === index
                      ? "w-12 h-4 bg-gradient-to-r from-green-500 to-green-500"
                      : "w-4 h-4 bg-gray-300 hover:bg-gray-400 hover:scale-125"
                  }`}
                >
                  {currentTestimonialSlide === index && (
                    <div className="absolute inset-0 bg-white/30 rounded-full animate-pulse"></div>
                  )}
                </button>
              ))}
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};
